#compdef perlbrew
#
#https://github.com/lapis25/dotfiles/blob/master/.zsh/functions/_perlbrew

typeset -A opt_args
local context state line

_arguments -C \
    '(- 1 *)'{-h,--help}'[prints this help]' \
    '(-f --force)'{-f,--force}'[Force installation of a perl]' \
    '(-j)-j=-:[Enable parallel make and test (if supported by the target perl)]' \
    '(-q --quiet)'{-q,--quiet}'[Log output to a log file rather than STDOUT. This is the default.]' \
    '(-v --verbose)'{-v,--verbose}'[Log output to STDOUT rather than a logfile]' \
    '*-D=-:[pass through switches to the perl Configure script]' \
    '*-U=-:[pass through switches to the perl Configure script]' \
    '*-A=-:[pass through switches to the perl Configure script]' \
    '(-as)'-as+'[Install a given perl under an alias.]:alias name' \
    '1: :->cmds' \
    '(1 *): :->args' && return 0

case $state in
  cmds)
    local -a cmds
    cmds=(
      'init:Initialize perlbrew environment.'
      'install:Install perl'
      'uninstall:Uninstall the given installation'
      'available:List perls available to install'
      'lib:Manage local::lib directories.'
      'alias:Give perl installations a new name'
      'list:List perl installations'
      'use:Use the specified perl in current shell'
      'off:Turn off perlbrew in current shell'
      'switch:Permanently use the specified perl as default'
      'switch-off:Permanently turn off perlbrew (revert to system perl)'
      'self-upgrade:Upgrade perlbrew itself.'
      'install-cpanm:Install cpanm, a friendly companion.'
      'install-patchperl:Install patchperl'
      'mirror:Pick a preferred mirror site'
      'version:Display version'
      'help:Read more detailed instructions'
      'exec:Execute command for all perls, one by one.'
      'env:See the list of environment variables'
    )

    _describe -t commands 'perlbrew command' cmds && ret=0
  ;;
  args)
    case $line[1] in
      switch | use)
       local -a versions
       versions=($(perlbrew list | perl -pe 's/\*.*//;s/\n/ /m'))
       _wanted versions expl 'perl version' compadd $versions && ret=0
      ;;
      install)
       local -a perl_versions
       perl_versions=($(perlbrew available|perl -pe 's/^i//m;s/\n/ /m') perl-blead )
       _wanted perl_versions expl 'perl-<version-number>' compadd $perl_versions && ret=0
      ;;
      uninstall)
       local -a versions
       versions=($(ls $PERLBREW_ROOT/perls/ | perl -pe 's/\n/ /m'))
       _wanted versions expl 'perl version' compadd $versions && ret=0
      ;;
      *)
        (( ret )) && _message 'no more arguments'
      ;;
    esac
  ;;
esac

return ret
