`MAKE.BAT'の編集とインストール(Windows 95,98/NT) [README.win]

Yuh Ohmura <yutopia@t3.rim.or.jp>
NAKAJIMA Mikio/中島幹夫 <minakaji@osaka.email.ne.jp>

同梱の INSTALL および README も必ずご覧下さい。

* Meadow/NTEmacs

以下は Meadow 2.10 を例に解説します。他の環境についても十分参考になる
よう記述します。Meadow は

     c:/meadow

にインストールされていると仮定します。

** gzip, make, tar などの準備

APEL, SKK のインストールに使うのは gzip, make, tar の各プログラムです。
これらを入手する手段は例えば

     http://sourceforge.net/projects/unxutils

などがあります。UnxUtils.zip をダウンロード・展開して、例えば
c:/UnxUtils に置いたとします。~/.emacs に以下のように設定します。

(setenv "PATH"
	(format "%s;%s;%s"
		"c:\\UnxUtils\\bin"
		"c:\\UnxUtils\\usr\\local\\wbin"
		(or (getenv "$PATH") "")))
(setenv "SHELL"  "sh.exe")

これで shell モード (M-x shell) が使えるようになります。
コマンドへのパスを確認する場合は、shell モードで

     % type make

などを実行します。

なお、cygwin を導入している環境では上記設定ではなく、cygwin の設定をし
て下さい。

** APEL のインストール

まず APELをインストールします。Daredevil SKK では、APEL 10.7 以降での動
作が確認されていますが、APEL は Emacs/XEmacs のバージョンアップに合わせ
て日進月歩なので、できるだけ新しいバージョンをインストールすることをお
勧めします。

*** APEL の取得

APEL は、

     http://kanji.zinbun.kyoto-u.ac.jp/%7Etomo/lemi/dist/apel/

     ftp://ftp.jpl.org/pub/elisp/apel/

などから入手できます。

*** APEL の展開(解凍)

APEL を tar.exe などを使って展開します。shell モードで以下のコマンドを
実行します。apel のアーカイブを c:/tmp に置いたと仮定すると

     % cd c:/tmp
     % gunzip apel-10.7.tar.gz
     % tar xvf apel-10.7.tar
     % cd apel-10.7

*** APEL の インストール設定

つづいて APEL-CFG というファイルを設定します。具体的には次の 2 行をファ
イルの末尾に追加します。

(setq APEL_DIR "c:/meadow/site-lisp/apel")
(setq EMU_DIR "c:/meadow/site-lisp/emu")

(これを設定しないと思わぬ場所にインストールされることがあります。)

*** APEL の インストール

つづいて shell モードで次を実行します。

     % make install EMACS=c:/meadow/bin/Meadow.exe

shell の出力を見て、指定通りの場所にインストールされたことを確認してく
ださい。

*** load-path への追加

c:/meadow/site-lisp 以下のサブディレクトリには Emacs が自動的に
load-path を設定するようになっています。なのでユーザはなにもする必要が
ありません。

** SKKのインストール

*** gzip, make, tar コマンドを使う場合

**** SKK の展開(解凍)

SKK ディストリビューションを上記の tar.exe を用いて展開します。

     % cd c:/tmp
     % gunzip ddskk-13.1.tar.gz
     % tar xvf ddskk-13.1.tar
     % cd ddskk-13.1

**** SKK 辞書の取得

以下をダウンロードします。

     http://openlab.jp/skk/dic/SKK-JISYO.L.gz

これを gunzip で展開し、ddskk のソースの dic というディレクトリに置き
ます。

**** SKK の インストール設定

まず、shell モードで以下を実行します。

     % make what-where EMACS=c:/meadow/bin/Meadow.exe

各種ファイルのインストール先が出力されます。これを見て問題なければ、そ
のままインストールに進みます。もし問題があれば、SKK-CFG というファイル
を編集して設定します。このファイルには

;;; Meadow 2.10 または 3.00-dev の設定例:

というのを特に設けていますので、これを雛形に編集してください。

**** SKK の インストール

shell モードで以下を実行します。

     % make install EMACS=c:/meadow/bin/Meadow.exe

*** makeit.bat を使う場合

Daredevil SKK には make コマンドの代わりに使える bat ファイルを収録し
ています。makeit.bat というファイルがそれです。

**** SKK 本体、辞書の取得と展開

適当な方法で展開します。SKK-JISYO.L を本体を展開した dic というサブディ
レクトリに置きます。

**** MAKEIT.BAT の編集

MAKEIT.BAT を自分の環境に合わせて編集します。
EMACS は御自分の Emacs のフルパスを指定します。上の例では、

EMACS=c:\meadow\bin\Meadow.exe

その他の設定は、SKK-CFG で行います。この点は make コマンドを使う場合と
同様です。

**** MAKEIT.BAT の実行

MAKEIT.BAT を使う時の注意点は、DOSPROMPT のプロパティで、環境変数のメモ
リ割り当てが自動になると、環境変数が設定できないので、適当な値(2048と
か)を入れておく必要があります。

Windows のコマンドプロンプトで MAKEIT.BAT のあるディレクトリに移動しま
す。
     > c:
     c:\> cd tmp
     c:\tmp> cd ddskk-13.1
     C:\tmp\ddskk\main> makeit what-where

でインストール先が確認できます。

     C:\tmp\ddskk\main> makeit install

によりインストールが実行されます。

なお、DEFAULT_MAKE_ARG に install と記述しておくことで、次回からは
MAKEIT.BAT をダブルクリックするだけでインストールが可能となります。

適宜指定が終った makeit.bat は下のいずれかのファイルとしてコピーしてお
くとそちらを優先して実行されます。(アップグレードの際に makeit.bat を
再編集する必要がなくなります) 優先順に:

  1-1. %HOME%\.elispmk.skk.bat
  1-2. %HOME%\elisp\elispmk.skk.bat
  1-3. %HOME%\config\elispmk.skk.bat
  1-4. c:\Program Files\Meadow\elispmk.skk.bat
  1-5. c:\Meadow\elispmk.skk.bat
  1-6. d:\Meadow\elispmk.skk.bat

  2-1. %HOME%\.elispmk.bat
  2-2. %HOME%\elisp\elispmk.bat
  2-3. %HOME%\config\elispmk.bat
  2-4. c:\Program Files\Meadow\elispmk.bat
  2-5. c:\Meadow\elispmk.bat
  2-6. d:\Meadow\elispmk.bat

*** load-path への追加

APEL の時と同様、ふつうは load-path の設定は自動で、ユーザがする必要は
ありません。

*** .emacs への追加

最初に起動をテストする際は、~/.emacs への設定はなにも必要ありません。
C-x C-j または M-x skk-mode で起動し、入力できることを確認します。

* Windows 上で動く SKK サーバ

Windows で利用できる SKK 辞書サーバには次のようなものがあります。

** wskkserv

Windows 上で動作する skkserv です。

     http://www.tatari-sakamoto.jp/wskkserv.jis.html

から入手できます。

** wceSKKSERV

複数辞書検索が可能な Windows 系 OS 用の skk サーバです。

     http://megadriver.yi.org/~fumi/wceskkserv/

から入手できます。

** cygwin を利用してソースからコンパイルして利用する

cygwin が使用できる環境では skkserv を直接コンパイルして使用すること
ができます。skkserv は

     http://openlab.ring.gr.jp/skk/skk/skkserv/

から入手できます。

また、cygwin で GNU inetutils をインストールしている場合
dbskkd を利用することもできます。

     http://www.cygwin.com

から入手できる setup.exe を利用するとインストールできます。
なお、inetutils の設定については、

     /usr/doc/Cygwin/inetutils-1.3.2.README

を参照して下さい。また、dbskkd は

     http://www.ne.jp/asahi/bdx/info/software/jp-dbskkd.html

から入手できます。

** スクリプト言語で実装されたサーバ

ruby が使用できるならば、 rskkserv が使用できます。
rskkserv は

     http://sourceforge.jp/projects/rskkserv/

から入手できます。

* Windows 上で動く SKK 実装

Windows 上で動作する SKK ライクの IME があります。

** skkime

設定がある程度 elisp でできるようになっていることと、SKK と共通の辞書
が使用できます。

     http://www.tatari-sakamoto.jp/skkime.jis.html


Local variables:
mode: outline
end:
